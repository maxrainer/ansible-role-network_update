---
# main upgrade part
# Cisco NXOS version

#
# COPY BLOCK
#
- name: Cisco NXOS file copy block
  block:
  - name: check file presence on device
    cisco.nxos.nxos_command:
      commands: "dir | include {{ update_file_name }}"
    register: _filepresence
  - debug:
      var: _filepresence
      verbosity: 2
  - name: get file checksum
    cisco.nxos.nxos_command:
      commands: "show file bootflash:{{ update_file_name }} {{ update_file_checksum_methode}}"
    when: update_file_checksum != "" and _filepresence.stdout[0] != ""
    register: _checksum
  - name: skip this if file not present or checksum invalid
    set_fact:
      _ready: true
    when: _filepresence.stdout[0] != "" or
       (_checksum.changed and _checksum.stdout_lines[0] == update_file_checksum)

  - name: copy image from server 
    cisco.nxos.nxos_file_copy: 
      file_pull: true
      file_pull_protocol: "{{ update_server_protocol }}"
      file_system: "{{ update_server_filesystem }}"
      local_file: 
      remote_file: "{{update_server_directory}}{{ update_file_name }}"
      remote_scp_server: "{{ update_server_ipv4 }}"
      remote_scp_server_user: "{{ update_server_user }}"
      remote_scp_server_password: "{{ update_server_password }}"
      vrf: "{{ update_local_vrf }}"
    when: not _ready
    register: _filecopy

  - name: verify checksum of copied file 
    cisco.nxos.nxos_command:
      commands: "show file bootflash:{{ update_file_name }} {{ update_file_checksum_method }}"
    when: _filecopy.changed and update_file_checksum != ""
    register: _checksumnew

  - name: fail if checksum of file is incorrect after copy
    fail: 
      msg: "checksum calculated: {{ _checksumnew.stdout_lines[0] }}, expected: {{ update_file_checksum }}"
    when: _filecopy.changed and update_file_checksum != "" and _checksumnew.stdout[0] != update_file_checksum

  rescue:
  - name: delete copied file if checkum failed
    cisco.nxos.nxos_command:
      commands: 
        - command: "delete {{ update_server_filesystem }}{{ update_file_name }}"
          prompt: "Do you want to delete .*"
          answer: y
  - fail:
      msg: copy process failed, image deleted from device

#
# INSTALL OS IMAGE BLOCK
#
- name: Cisco NXOS software update block
  block: 
  - name: install OS on device
    check_mode: no
    cisco.nxos.nxos_install_os:
      system_image_file: "{{ update_file_name_old }}"
    vars:
      - ansible_command_timeout: 600
      - ansible_connect_timeout: 600
    register: _osinstall
  - debug:
      var: _osinstall
      verbosity: 2
  # not sure this is needed
  # - name: waiting for update finished and reboot
  #   wait_for:
  #     host: "{{ inventory_hostname }}"
  #     port: 22
  #     state: stopped
  #     timeout: 300
  #     delay: 60
  - name: waiting for device after reboot
    wait_for:
      host: "{{ ansible_host }}"
      port: 22
      state: started
      timeout: 500
      delay: 30
    vars:
      ansible_connection: local
  - name: get installed OS version
    cisco.nxos.nxos_command:
      commands: show version | json
    register: _kickstart
  - name: check installed and expected OS version
    assert:
      that:
        - _kickstart['stdout'][0]['kickstart_ver_str'] == update_kickstart_version
      success_msg: expected kickstart version detected
      fail_msg: wrong kickstart version detected
  when: not _failed